---
apiVersion: k8.kubify.local/v1
kind: Config
metadata:
  name: example-node-complex-svc
init: |
  echo "run init for example-node-complex-svc/app"
dev:
  sync:
    'app/***': 'app/'
  scripts:
    start: |
      echo 'listening for code changes in example-node-complex-svc folder'
      cd /app/app
      DB_USERNAME=$POSTGRES_USER
      DB_PASSWORD=$POSTGRES_PASSWORD
      node app.js
release:
  scripts:
    start: |
      echo 'starting example-node-complex-svc release service's pod'  
      cd /app/app
      DB_USERNAME=$POSTGRES_USER
      DB_PASSWORD=$POSTGRES_PASSWORD
      node app.js
service:
  port: "3000"
config:
  PORT: "3000"
  APP_NAME: example-node-complex-svc
  DEBUG: "example-node-complex-svc:*"
  DB_HOST: example-node-complex-svc-postgres
  DB_NAME: example-node-complex-svc
  ENV: "{{ env }}"
  REDIS_URL: "example-node-complex-svc-redis"
  REDIS_PORT: "6379"
  REDIS_DATABASE: "0"
  KUBIFY_ENV: "{{ env }}"
  UNIQUE_COMPANY_ACRONYM: {{ UNIQUE_COMPANY_ACRONYM }}
profiles:
  dev:
    aws:
      # local behavior: simulate these services with localstack, also points ~/.aws/config endpoints to localstack
      # deployed behavior: deploys these resources, if not already deployed (can also use the terraform ${SRC_DIR}/infra folder to create custom)
      services:
        - s3:
          - {{ UNIQUE_COMPANY_ACRONYM }}-example-node-complex-svc-incoming
          - {{ UNIQUE_COMPANY_ACRONYM }}-example-node-complex-svc-outgoing
        - sqs: 
          - {{ UNIQUE_COMPANY_ACRONYM }}-example-node-complex-svc-normal
          - {{ UNIQUE_COMPANY_ACRONYM }}-example-node-complex-svc.fifo
    # Autoscaling Service
    scaler:
      minReplicas: 2
      maxReplicas: 4
      metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 40
    resources:
      requests:
        cpu: 64m
        memory: 64Mi
      limits:
        cpu: 128m
        memory: 128Mi
    # KubeDB Databases
    databases:
      redis:
        type: redis
        version: 5.0.3-v1
      postgres:
        type: postgres
        version: 11.2-v1
        init:
          script: |
            CREATE DATABASE "example-node-complex-svc"    
