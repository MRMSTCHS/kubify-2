{% set databases = kubify_config | json_query("profiles." + profile + ".databases") | default(dict(), true) %}
{% for name, db in databases.items() %}
{% if db.type == 'postgres' %}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ app_name }}-{{ name }}-auth"
  labels:
    app: "{{ app_name }}"
    kubify_version: "{{ kubify_version }}"
type: Opaque
data:
  POSTGRES_USER: "{{ 'test' | b64encode }}"
  POSTGRES_PASSWORD: "{{ 'test' | b64encode }}"
---
apiVersion: kubedb.com/v1alpha2
kind: Postgres
metadata:
  name: "{{ app_name }}-{{ name }}"
  labels:
    kubify_version: "{{ kubify_version }}"
spec:
  version: "{{ db.version }}"
  storageType: Ephemeral
{% if is_local is defined %}
  serviceTemplate:
    spec:
      type: NodePort
{% endif %}
  databaseSecret:
    secretName: "{{ app_name }}-{{ name }}-auth"
  storage:
    storageClassName: "standard"
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "{{ db.size }}"
{% if (db | json_query('init.script')) %}
  init:
    scriptSource:
      configMap:
        name: "{{ app_name }}-{{ name }}-init"
{% endif %}
---
{% if (db | json_query('init.script')) %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ app_name }}-{{ name }}-init"
  labels:
    kubify_version: "{{ kubify_version }}"
data:
  data.sql: |
{{ db.init.script | indent(width=4, first=true) }}
{% endif %}
{% elif db.type == 'mongo' %}
---
apiVersion: kubedb.com/v1alpha2
kind: MongoDB
metadata:
  name: "{{ app_name }}-{{ name }}"
  labels:
    kubify_version: "{{ kubify_version }}"
spec:
  version: "{{ db.version }}"
  storageType: Ephemeral
{% if is_local is defined %}
  serviceTemplate:
    spec:
      type: NodePort
{% endif %}
{% endif %}
{% endfor %}
